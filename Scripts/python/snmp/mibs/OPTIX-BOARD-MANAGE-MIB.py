#
# PySNMP MIB module OPTIX-BOARD-MANAGE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/share/snmp/mibs/OPTIX-BOARD-MANAGE-MIB.mib
# Produced by pysmi-0.3.4 at Thu Jun 11 11:56:19 2020
# On host DESKTOP-LULODOL platform Linux version 4.19.84-microsoft-standard by user root
# Using Python version 3.7.3 (default, Dec 20 2019, 18:57:59) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
optixProvisionEqpt, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixProvisionEqpt")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
iso, ObjectIdentity, Integer32, Unsigned32, Counter64, Bits, Gauge32, MibIdentifier, ModuleIdentity, IpAddress, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "ObjectIdentity", "Integer32", "Unsigned32", "Counter64", "Bits", "Gauge32", "MibIdentifier", "ModuleIdentity", "IpAddress", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks")
TextualConvention, DateAndTime, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "DisplayString", "RowStatus")
optixBoardMng = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14))
optixBoardMng.setRevisions(('2012-04-17 00:00', '2012-04-17 00:00',))
if mibBuilder.loadTexts: optixBoardMng.setLastUpdated('201204170000Z')
if mibBuilder.loadTexts: optixBoardMng.setOrganization('Huawei Technologies co.,Ltd.')
optixBoardMngGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1))
optixLogBoardTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1), )
if mibBuilder.loadTexts: optixLogBoardTable.setStatus('current')
optixLogBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1), ).setIndexNames((0, "OPTIX-BOARD-MANAGE-MIB", "optixLogBoardId"))
if mibBuilder.loadTexts: optixLogBoardEntry.setStatus('current')
optixLogBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: optixLogBoardId.setStatus('current')
optixLogBoardLogType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 2), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardLogType.setStatus('current')
optixLogBoardTempHighTh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 3), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardTempHighTh.setStatus('current')
optixLogBoardTempLowTh = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 4), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardTempLowTh.setStatus('current')
optixLogBoardCurTemp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardCurTemp.setStatus('current')
optixLogBoardBusdetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardBusdetect.setStatus('current')
optixLogSubCardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogSubCardId.setStatus('current')
optixLogBoardLowTempThMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardLowTempThMin.setStatus('current')
optixLogBoardLowTempThMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardLowTempThMax.setStatus('current')
optixLogBoardLowTempThDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 10), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardLowTempThDefault.setStatus('current')
optixLogBoardHighTempThMin = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardHighTempThMin.setStatus('current')
optixLogBoardHighTempThMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardHighTempThMax.setStatus('current')
optixLogBoardHighTempThDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardHighTempThDefault.setStatus('current')
optixLogBoardReplaceBdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLogBoardReplaceBdType.setStatus('current')
optixLogBoardChangeBdType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 15), OctetString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardChangeBdType.setStatus('current')
optixLogBoardRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 1, 1, 255), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: optixLogBoardRowStatus.setStatus('current')
optixPhyBoardTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2), )
if mibBuilder.loadTexts: optixPhyBoardTable.setStatus('current')
optixPhyBoardEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1), ).setIndexNames((0, "OPTIX-BOARD-MANAGE-MIB", "optixPhyBoardId"))
if mibBuilder.loadTexts: optixPhyBoardEntry.setStatus('current')
optixPhyBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: optixPhyBoardId.setStatus('current')
optixPhyBoardType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBoardType.setStatus('current')
optixPhyBoardState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("work", 1), ("notWork", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBoardState.setStatus('current')
optixPhyBDRVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBDRVer.setStatus('current')
optixPhyBDDVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBDDVer.setStatus('current')
optixPhyBDHVer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBDHVer.setStatus('current')
optixPhyBDVerInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 200))).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBDVerInfo.setStatus('current')
optixPhyBDOnlineFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("offline", 0), ("online", 1), ("notMatch", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhyBDOnlineFlag.setStatus('current')
optixPhyBoardReset = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("hard", 0), ("soft", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: optixPhyBoardReset.setStatus('current')
optixPhybdCfgFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 0))).clone(namedValues=NamedValues(("yes", 1), ("no", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhybdCfgFlag.setStatus('current')
optixPhybdCfgTimeinfo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhybdCfgTimeinfo.setStatus('current')
optixPhybdtypelist = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 2, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixPhybdtypelist.setStatus('current')
optixBoardMngMember = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 3))
optixBoardMngBid = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 3, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: optixBoardMngBid.setStatus('current')
optixBoardMngBoardType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 3, 2), OctetString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: optixBoardMngBoardType.setStatus('current')
optixBoardMngEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 4))
optixBoardMngNewBdTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 30, 14, 1, 4, 1)).setObjects(("OPTIX-BOARD-MANAGE-MIB", "optixBoardMngBid"), ("OPTIX-BOARD-MANAGE-MIB", "optixBoardMngBoardType"))
if mibBuilder.loadTexts: optixBoardMngNewBdTrap.setStatus('current')
mibBuilder.exportSymbols("OPTIX-BOARD-MANAGE-MIB", optixLogBoardHighTempThMin=optixLogBoardHighTempThMin, optixLogBoardHighTempThMax=optixLogBoardHighTempThMax, PYSNMP_MODULE_ID=optixBoardMng, optixBoardMng=optixBoardMng, optixPhyBDDVer=optixPhyBDDVer, optixPhybdtypelist=optixPhybdtypelist, optixLogBoardLowTempThMax=optixLogBoardLowTempThMax, optixLogBoardChangeBdType=optixLogBoardChangeBdType, optixLogBoardId=optixLogBoardId, optixLogSubCardId=optixLogSubCardId, optixPhybdCfgTimeinfo=optixPhybdCfgTimeinfo, optixPhyBDVerInfo=optixPhyBDVerInfo, optixPhyBoardType=optixPhyBoardType, optixPhyBoardReset=optixPhyBoardReset, optixBoardMngBid=optixBoardMngBid, optixLogBoardLogType=optixLogBoardLogType, optixLogBoardReplaceBdType=optixLogBoardReplaceBdType, optixPhyBoardId=optixPhyBoardId, optixPhyBoardTable=optixPhyBoardTable, optixPhyBDOnlineFlag=optixPhyBDOnlineFlag, optixLogBoardLowTempThMin=optixLogBoardLowTempThMin, optixLogBoardTable=optixLogBoardTable, optixBoardMngNewBdTrap=optixBoardMngNewBdTrap, optixPhyBoardEntry=optixPhyBoardEntry, optixLogBoardCurTemp=optixLogBoardCurTemp, optixLogBoardBusdetect=optixLogBoardBusdetect, optixBoardMngEvent=optixBoardMngEvent, optixPhyBoardState=optixPhyBoardState, optixLogBoardRowStatus=optixLogBoardRowStatus, optixPhyBDHVer=optixPhyBDHVer, optixBoardMngMember=optixBoardMngMember, optixLogBoardTempLowTh=optixLogBoardTempLowTh, optixBoardMngGroup=optixBoardMngGroup, optixLogBoardTempHighTh=optixLogBoardTempHighTh, optixLogBoardHighTempThDefault=optixLogBoardHighTempThDefault, optixPhyBDRVer=optixPhyBDRVer, optixBoardMngBoardType=optixBoardMngBoardType, optixPhybdCfgFlag=optixPhybdCfgFlag, optixLogBoardEntry=optixLogBoardEntry, optixLogBoardLowTempThDefault=optixLogBoardLowTempThDefault)
