#
# PySNMP MIB module OPTIX-PKT-LINK-SEARCH-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://./OPTIX-PKT-LINK-SEARCH-MIB.MIB
# Produced by pysmi-0.3.4 at Thu Sep 10 17:24:11 2020
# On host localhost.localdomain platform Linux version 3.10.0-1127.13.1.el7.x86_64 by user root
# Using Python version 3.6.8 (default, Apr  2 2020, 13:34:55) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint")
optixLogBoardId, optixLogSubCardId = mibBuilder.importSymbols("OPTIX-BOARD-MANAGE-MIB", "optixLogBoardId", "optixLogSubCardId")
optixProvisionPtn, = mibBuilder.importSymbols("OPTIX-OID-MIB", "optixProvisionPtn")
optixPortId, = mibBuilder.importSymbols("OPTIX-PORT-MANAGE-MIB", "optixPortId")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, ModuleIdentity, Counter32, IpAddress, TimeTicks, NotificationType, Counter64, Gauge32, ObjectIdentity, Unsigned32, Integer32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "ModuleIdentity", "Counter32", "IpAddress", "TimeTicks", "NotificationType", "Counter64", "Gauge32", "ObjectIdentity", "Unsigned32", "Integer32", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
optixPktLinkSearch = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16))
optixPktLinkSearch.setRevisions(('2012-12-05 16:42',))
if mibBuilder.loadTexts: optixPktLinkSearch.setLastUpdated('201212051642Z')
if mibBuilder.loadTexts: optixPktLinkSearch.setOrganization('Huawei Technologies co.,Ltd.')
optixPktLinkSearchtGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1))
optixLinkSearchTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1), )
if mibBuilder.loadTexts: optixLinkSearchTable.setStatus('current')
optixLinkSearchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1), ).setIndexNames((0, "OPTIX-BOARD-MANAGE-MIB", "optixLogBoardId"), (0, "OPTIX-BOARD-MANAGE-MIB", "optixLogSubCardId"), (0, "OPTIX-PORT-MANAGE-MIB", "optixPortId"))
if mibBuilder.loadTexts: optixLinkSearchEntry.setStatus('current')
optixLinkSearchTxNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxNeId.setStatus('current')
optixLinkSearchTxPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("pos", 1), ("cStm", 2), ("e1", 3), ("eth", 4), ("vlan", 5), ("ifport", 6), ("xdsl", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxPortType.setStatus('current')
optixLinkSearchTxBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxBoardId.setStatus('current')
optixLinkSearchTxSubId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxSubId.setStatus('current')
optixLinkSearchTxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxPortId.setStatus('current')
optixLinkSearchTxSlotVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchTxSlotVlan.setStatus('current')
optixLinkSearchRxNeId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxNeId.setStatus('current')
optixLinkSearchRxPortType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxPortType.setStatus('current')
optixLinkSearchRxBoardId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxBoardId.setStatus('current')
optixLinkSearchRxSubId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxSubId.setStatus('current')
optixLinkSearchRxPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxPortId.setStatus('current')
optixLinkSearchRxSlotVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: optixLinkSearchRxSlotVlan.setStatus('current')
optixLinkSearchStartStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 25, 4, 50, 16, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("invalied", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: optixLinkSearchStartStatus.setStatus('current')
mibBuilder.exportSymbols("OPTIX-PKT-LINK-SEARCH-MIB", optixPktLinkSearchtGroup=optixPktLinkSearchtGroup, optixLinkSearchRxSlotVlan=optixLinkSearchRxSlotVlan, optixLinkSearchTxSlotVlan=optixLinkSearchTxSlotVlan, optixLinkSearchStartStatus=optixLinkSearchStartStatus, optixLinkSearchTable=optixLinkSearchTable, optixLinkSearchTxNeId=optixLinkSearchTxNeId, optixLinkSearchTxSubId=optixLinkSearchTxSubId, optixLinkSearchRxSubId=optixLinkSearchRxSubId, PYSNMP_MODULE_ID=optixPktLinkSearch, optixLinkSearchEntry=optixLinkSearchEntry, optixLinkSearchTxPortId=optixLinkSearchTxPortId, optixLinkSearchRxNeId=optixLinkSearchRxNeId, optixLinkSearchRxPortType=optixLinkSearchRxPortType, optixPktLinkSearch=optixPktLinkSearch, optixLinkSearchRxBoardId=optixLinkSearchRxBoardId, optixLinkSearchTxBoardId=optixLinkSearchTxBoardId, optixLinkSearchTxPortType=optixLinkSearchTxPortType, optixLinkSearchRxPortId=optixLinkSearchRxPortId)
